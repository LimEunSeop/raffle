{"version":3,"sources":["Components/Main.tsx","Components/Arrangement.tsx","utils/getShuffledPeople.tsx","Components/DataSetting.tsx","Components/Layout.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["StyledLink","styled","Link","_templateObject","Object","taggedTemplateLiteral","Main","react_default","a","createElement","Fragment","Helmet","style","textAlign","marginBottom","display","justifyContent","width","margin","menus","map","menu","to","path","key","label","seatWidth","seatHeight","StyledSection","section","Arrangement_templateObject","SeatArea","div","_templateObject2","Seat","button","_templateObject3","PersonEl","_templateObject4","StyledInput","input","_templateObject5","StyledButton","_templateObject6","Arrangement","_useState","useState","_useState2","slicedToArray","row","setRow","_useState3","_useState4","column","setColumn","_useState5","_useState6","bannedSeatIdx","setBannedSeatIdx","_useState7","_useState8","started","setStarted","people","useRef","groups","setting","intervalId","useEffect","arrangementData","JSON","parse","localStorage","getItem","raffleData","current","fetchedPeople","fetchedGroups","hideSeatItems","$seatArea","$","seatAreaWidth","seatAreaHeight","height","document","querySelectorAll","forEach","seat","dataset","left","String","offsetLeft","top","offsetTop","animate","concat","hide","handleInputChange","useCallback","e","_e$target","target","name","value","setFunctions","onlyNumber","Number","replace","setItem","stringify","handleSeatClick","idx","currentTarget","indexOf","toConsumableArray","filter","x","handleStartButtonClick","personElements","Array","from","completeList","zIndex","animation","raffledIdx","Math","trunc","random","length","$personElement","goLeft","parent","data","goTop","currentLeft","window","parseInt","css","currentTop","console","log","abs","show","push","splice","setInterval","clearInterval","shuffledPeople","useMemo","col","copiedPeople","checkLeftPersonSameGroup","currentIdx","person","group","personToMove","adjHasSameGroup","notFoundDifferentGroup","i","reRaffledIdx","getShuffledPeople","peopleIdx","marginRight","type","id","onChange","htmlFor","onClick","disabled","className","keys","eachRow","eachColumn","j","_shuffledPeople$peopl","_shuffledPeople$peopl2","data-idx","data-testid","classnames","defaultData","b","DataSetting","setValue","handleSubmit","preventDefault","elements","handleChange","trim","onSubmit","rows","cols","marginTop","fontSize","Layout","_ref","title","children","location","useLocation","padding","fontWeight","pathname","react_router_dom","textDecoration","color","href","rel","element","Components_Arrangement","Components_DataSetting","programName","App","react_router","Layout_Layout","Components_Main","React","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","getElementById"],"mappings":"uQAmCMA,EAAaC,YAAOC,IAAPD,CAAHE,MAAAC,OAAAC,EAAA,EAAAD,CAAA,sTAmBDE,EAhDF,WACX,OACEC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAAA,uDAEFF,EAAAC,EAAAC,cAAA,OAAKG,MAAO,IACVL,EAAAC,EAAAC,cAAA,MAAIG,MAAO,CAAEC,UAAW,SAAUC,aAAc,UAAhD,4DAGAP,EAAAC,EAAAC,cAAA,OACEG,MAAO,CACLG,QAAS,OACTC,eAAgB,gBAChBC,MAAO,QACPC,OAAQ,WAGTC,EAAMC,IAAI,SAACC,GAAD,OACTd,EAAAC,EAAAC,cAACT,EAAD,CAAYsB,GAAID,EAAKE,KAAMC,IAAKH,EAAKI,OAClCJ,EAAKI,8ECiOdC,EAAY,IACZC,EAAa,GAEbC,EAAgB3B,IAAO4B,QAAVC,MAAA1B,OAAAC,EAAA,EAAAD,CAAA,iCAIb2B,EAAW9B,IAAO+B,IAAVC,MAAA7B,OAAAC,EAAA,EAAAD,CAAA,2DAKR8B,EAAOjC,IAAOkC,OAAVC,MAAAhC,OAAAC,EAAA,EAAAD,CAAA,8aAECsB,EACCC,GA2BNU,EAAWpC,IAAO+B,IAAVM,MAAAlC,OAAAC,EAAA,EAAAD,CAAA,uaAOHsB,EACCC,GAgBNY,EAActC,IAAOuC,MAAVC,MAAArC,OAAAC,EAAA,EAAAD,CAAA,+JAUXsC,EAAezC,IAAOkC,OAAVQ,MAAAvC,OAAAC,EAAA,EAAAD,CAAA,gHAQHwC,EA9SK,WAClB,IAAAC,EAAsBC,mBAAS,IAA/BC,EAAA3C,OAAA4C,EAAA,EAAA5C,CAAAyC,EAAA,GAAOI,EAAPF,EAAA,GAAYG,EAAZH,EAAA,GACAI,EAA4BL,mBAAS,IAArCM,EAAAhD,OAAA4C,EAAA,EAAA5C,CAAA+C,EAAA,GAAOE,EAAPD,EAAA,GAAeE,EAAfF,EAAA,GACAG,EAA0CT,mBAAmB,IAA7DU,EAAApD,OAAA4C,EAAA,EAAA5C,CAAAmD,EAAA,GAAOE,EAAPD,EAAA,GAAsBE,EAAtBF,EAAA,GACAG,EAA8Bb,oBAAS,GAAvCc,EAAAxD,OAAA4C,EAAA,EAAA5C,CAAAuD,EAAA,GAAOE,EAAPD,EAAA,GAAgBE,EAAhBF,EAAA,GAEMG,EAASC,iBAAiB,IAC1BC,EAASD,iBAAe,IACxBE,EAAUF,iBAAwB,CAAEf,IAAK,EAAGI,OAAQ,IAEpDc,EAAaH,mBAEnBI,oBAAU,WACR,IAAMC,EAAmCC,KAAKC,MAC5CC,aAAaC,QAAQ,oBAEjBC,EAAyBJ,KAAKC,MAClCC,aAAaC,QAAQ,eAGvB,GAAIJ,EAAiB,CACnB,IAAQpB,EAAgBoB,EAAhBpB,IAAKI,EAAWgB,EAAXhB,OAIb,GAFAa,EAAQS,QAAU,CAAE1B,MAAKI,UAErBqB,EAAY,CACd,IAAgBE,EAAyCF,EAAjDX,OAA+Bc,EAAkBH,EAA1BT,OAE/BF,EAAOY,QAAUC,EACjBX,EAAOU,QAAUE,EAGnB3B,EAAOD,EAAM,IACbK,EAAUD,EAAS,MAEpB,IAEHe,oBAAU,WACRU,KACC,CAAC7B,EAAKI,EAAQI,IAEjB,IAAMqB,EAAgB,WACpB,IAAMC,EAAYC,IAAE,eACdC,EAAgBF,EAAU9D,SAAW,EACrCiE,EAAiBH,EAAUI,UAAY,EAG3CC,SAASC,iBAAoC,eACrCC,QAAQ,SAACC,GACjBA,EAAKC,QAAQC,KAAOC,OAAOH,EAAKI,YAChCJ,EAAKC,QAAQI,IAAMF,OAAOH,EAAKM,WAE/Bb,IAAE,gBAAiBO,GAChBO,QAAQ,CACPL,KAAI,GAAAM,OAAKd,EAAgB,EAAIvD,EAAY,EAArC,MACJkE,IAAG,GAAAG,OAAKb,EAAiB,EAAIvD,EAAa,EAAvC,QAEJqE,UAIDC,EAAoBC,sBAAY,SAACC,GACrC,IAAAC,EAAwBD,EAAEE,OAAlBC,EAARF,EAAQE,KAAMC,EAAdH,EAAcG,MACRC,EAEF,CAAEvD,IAAKC,EAAQG,OAAQC,GAEvBmD,EAAaC,OAAOH,EAAMI,QAAQ,UAAW,KACjDF,EAAaA,EAAa,IAAM,IAAMA,EACtCD,EAAaF,GAAMZ,OAAOe,IAE1BvC,EAAQS,QAAQ2B,GAAiCG,EACjDjC,aAAaoC,QAAQ,kBAAmBtC,KAAKuC,UAAU3C,EAAQS,UAC/DjB,EAAiB,KAChB,IAEGoD,EAAkBZ,sBACtB,SAACC,GACC,IAAMY,EAAML,OAAOP,EAAEa,cAAcxB,QAAQuB,MAEP,IAAhCtD,EAAcwD,QAAQF,GACxBrD,EAAgB,GAAAqC,OAAA3F,OAAA8G,EAAA,EAAA9G,CAAKqD,GAAL,CAAoBsD,KAEpCrD,EAAiBD,EAAc0D,OAAO,SAACC,GAAD,OAAOA,IAAML,MAGvD,CAACtD,IAGG4D,EAAyBnB,sBAC7B,SAACC,GACCrC,GAAW,GAEXgB,IAEA,IAAMwC,EAAiBC,MAAMC,KAC3BpC,SAASC,iBAAiC,kBAGtCoC,EAAiC,GAEnCC,EAAS,IACPC,EAAY,WAChB,IAAMC,EAAaC,KAAKC,MAAMD,KAAKE,SAAWT,EAAeU,QAEvDC,EAAiBjD,IAAEsC,EAAeM,IAClCM,EAASxB,OAAOuB,EAAeE,SAASC,KAAK,SAC7CC,EAAQ3B,OAAOuB,EAAeE,SAASC,KAAK,QAE5CE,EAAcC,OAAOC,SAASP,EAAeQ,IAAI,SACjDC,EAAaH,OAAOC,SAASP,EAAeQ,IAAI,QAEtDE,QAAQC,IAAIf,KAAKgB,IAAIP,EAAcJ,IACnCS,QAAQC,IAAIf,KAAKgB,IAAIH,EAAaL,IAClCJ,EACGQ,IAAI,CAAEf,SAAUA,IAChBoB,KAAK,KACLhD,QAAQ,CAAEL,KAAMyC,EAAS,GAAsC,EAAjCL,KAAKgB,IAAIP,EAAcJ,IACrDpC,QAAQ,CAAEF,IAAKyC,EAAQ,GAAoC,EAA/BR,KAAKgB,IAAIH,EAAaL,IAErDZ,EAAasB,KAAKzB,EAAe0B,OAAOpB,EAAY,GAAG,KAGzDD,IAEExD,EAAWQ,QAAU4D,OAAOU,YAAY,WACtCtB,IAE8B,IAA1BL,EAAeU,SACjBO,OAAOW,cAAc/E,EAAWQ,SAChCb,GAAW,KAEZ,MAIP,IAGIqF,EAAiBC,kBAAQ,WAC7B,GAAIrF,EACF,OC5KS,SACbd,EACAoG,EACAtF,GAcA,IAZA,IAAMuF,EAAYlJ,OAAA8G,EAAA,EAAA9G,CAAO2D,GACnBoF,EAA2B,GAE3BI,EAA2B,SAACC,EAAoBC,GACpD,OAAmB,IAAfD,GAGKC,EAAOC,QAAUP,EAAeK,EAAa,GAAGE,OAK5B,IAAxBJ,EAAatB,QAAc,CAChC,IAAMJ,EAAaC,KAAKC,MAAMD,KAAKE,SAAWuB,EAAatB,QAE3D,IAIQ,IAHNuB,EACEJ,EAAenB,OACfsB,EAAa1B,IAEf,CACA,IAAM+B,EAAeL,EAAaN,OAAOpB,EAAY,GAAG,GACxD+B,EAAaC,iBAAkB,EAC/BT,EAAeJ,KAAKY,OACf,CAEL,IADA,IAAIE,GAAyB,EACpBC,EAAI,EAAGA,EAAI,IAAKA,IAAK,CAC5B,IAAMC,EAAelC,KAAKC,MAAMD,KAAKE,SAAWuB,EAAatB,QAC7D,IAIQ,IAHNuB,EACEJ,EAAenB,OACfsB,EAAaS,IAEf,CACA,IAAMJ,EAAeL,EAAaN,OAAOe,EAAc,GAAG,GAC1DJ,EAAaC,iBAAkB,EAC/BT,EAAeJ,KAAKY,GACpBE,GAAyB,EACzB,OAIJ,GAAIA,EAAwB,CAC1B,IAAMF,EAAeL,EAAaN,OAAOpB,EAAY,GAAG,GACxD+B,EAAaC,iBAAkB,EAC/BT,EAAeA,EAAenB,OAAS,GAAG4B,iBAAkB,EAC5DT,EAAeJ,KAAKY,KAK1B,OAAOR,EDoHIa,CAAkBtD,OAAOzD,GAAMyD,OAAOrD,GAASU,EAAOY,UAE9D,CAAC1B,EAAKI,EAAQI,IACbwG,EAAY,EAEhB,OACE1J,EAAAC,EAAAC,cAACmB,EAAD,KACErB,EAAAC,EAAAC,cAAA,6CACAF,EAAAC,EAAAC,cAAA,QAAMG,MAAO,CAAEE,aAAc,KAC3BP,EAAAC,EAAAC,cAAA,QAAMG,MAAO,CAAEsJ,YAAa,KAC1B3J,EAAAC,EAAAC,cAAC8B,EAAD,CACE4H,KAAK,OACLC,GAAG,MACH9D,KAAK,MACLC,MAAOtD,EACPoH,SAAUpE,IAEZ1F,EAAAC,EAAAC,cAAA,SAAO6J,QAAQ,OAAf,WAEF/J,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAC8B,EAAD,CACE4H,KAAK,OACLC,GAAG,SACH9D,KAAK,SACLC,MAAOlD,EACPgH,SAAUpE,IAEZ1F,EAAAC,EAAAC,cAAA,SAAO6J,QAAQ,UAAf,WAEF/J,EAAAC,EAAAC,cAACiC,EAAD,CACEyH,KAAK,SACLI,QAASlD,EACTmD,SAAU3G,GAHZ,WAQFtD,EAAAC,EAAAC,cAACsB,EAAD,CAAU0I,UAAU,cACjBlD,MAAMC,KAAKD,MAAMb,OAAOzD,IAAMyH,QAAQtJ,IAAI,SAACuJ,EAASb,GAAV,OACzCvJ,EAAAC,EAAAC,cAAA,OAAKe,IAAG,OAAAuE,OAAS+D,IACdvC,MAAMC,KAAKD,MAAMb,OAAOrD,IAASqH,QAAQtJ,IAAI,SAACwJ,EAAYC,GAAM,IAAAC,EAAAC,EACzDhE,EAAM+C,EAAIpD,OAAOrD,GAAUwH,EACjC,OACEtK,EAAAC,EAAAC,cAACyB,EAAD,CACEV,IAAG,UAAAuE,OAAYgB,GACfoD,KAAK,SACLa,WAAUjE,EACVkE,cAAA,QAAAlF,OAAqBgB,GACrBwD,QAASzD,EACT2D,UAAWS,IACT,cACgC,IAAhCzH,EAAcwD,QAAQF,IAAc,UAEtCyD,SAAU3G,GAETsF,GACCc,EAAYd,EAAenB,SACK,IAAhCvE,EAAcwD,QAAQF,IACpBxG,EAAAC,EAAAC,cAAC4B,EAAD,CAAUoI,UAAU,gBAClBlK,EAAAC,EAAAC,cAAA,QAAMgK,UAAU,QAAhB,QAAAK,EACG3B,EAAec,UADlB,IAAAa,OAAA,EACGA,EAA2BxE,MAE9B/F,EAAAC,EAAAC,cAAA,QAAMgK,UAAU,SACbxG,EAAOU,QAAP,QAAAoG,EAAe5B,EAAec,YAA9B,IAAAc,OAAA,EAAeA,EAA6BrB,kBEtOjEyB,EAAc,CAClBlH,OAAQ,CACNzD,EAAG,gBACH4K,EAAG,iBAELrH,OAAQ,CACN,CACEuC,KAAM,gBACNoD,MAAO,KAET,CACEpD,KAAM,gBACNoD,MAAO,OAkEE2B,EA7DK,WAClB,IAAAxI,EAA0BC,mBAAS,IAAnCC,EAAA3C,OAAA4C,EAAA,EAAA5C,CAAAyC,EAAA,GAAO0D,EAAPxD,EAAA,GAAcuI,EAAdvI,EAAA,GAEMwI,EAAerF,sBAAY,SAACC,GAChCA,EAAEqF,iBAEF,IACMpD,EADgBjC,EAAEE,OAAOoF,SACJrD,KAE3B5D,aAAaoC,QAAQ,aAAcwB,EAAK7B,QACvC,IAEGmF,EAAexF,sBAAY,SAACC,GAChC,IAAMI,EAAQJ,EAAEa,cAAcT,MAC9B+E,EAAS/E,IACR,IAiBH,OAfAnC,oBAAU,WACR,IAAIgE,EAAO5D,aAAaC,QAAQ,cAC5B2D,GACFA,EAAOA,EAAKuD,OACZhD,QAAQC,IAAIR,EAAKJ,QACG,IAAhBI,EAAKJ,OACPsD,EAAShH,KAAKuC,UAAUsE,EAAa,KAAM,IAE3CG,EAAShH,KAAKuC,UAAUvC,KAAKC,MAAM6D,GAAO,KAAM,KAGlDkD,EAAShH,KAAKuC,UAAUsE,EAAa,KAAM,KAE5C,IAGD5K,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,QAAMmL,SAAUL,EAAc3K,MAAO,CAAEC,UAAW,WAChDN,EAAAC,EAAAC,cAAA,YACEwK,cAAY,QACZ3E,KAAK,OACL+D,SAAUqB,EACVG,KAAM,GACNC,KAAM,IACNlL,MAAO,CAAEmL,UAAW,OAAQjL,aAAc,QAC1CyF,MAAOA,IAEThG,EAAAC,EAAAC,cAAA,UACE0J,KAAK,SACLvJ,MAAO,CACLG,QAAS,QACTE,MAAO,QACPkE,OAAQ,OACRjE,OAAQ,SACR8K,SAAU,SAPd,mBC1DKC,EAAS,SAAAC,GAAgC,IAA7BC,EAA6BD,EAA7BC,MAAOC,EAAsBF,EAAtBE,SACxBC,EAAWC,cAEjB,OACE/L,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAAA,aAAQ0L,IAEV5L,EAAAC,EAAAC,cAAA,UACEG,MAAO,CACLC,UAAW,QACX0L,QAAS,OACTP,SAAU,OACVQ,WAAY,MAGS,MAAtBH,EAASI,UACRlM,EAAAC,EAAAC,cAACiM,EAAA,EAAD,CAAMpL,GAAG,IAAIV,MAAO,CAAE+L,eAAgB,OAAQC,MAAO,SAArD,6BAMJrM,EAAAC,EAAAC,cAAA,YAAO2L,GAEP7L,EAAAC,EAAAC,cAAA,UACEG,MAAO,CACLC,UAAW,SACX0L,QAAS,SACTK,MAAO,OACPb,UAAW,UALf,6EAQ2B,IACzBxL,EAAAC,EAAAC,cAAA,KACEoM,KAAK,uCACLxG,OAAO,SACPyG,IAAI,uBAHN,cAMK,IAfP,gCCzBO3L,EAAQ,CACnB,CAAEM,MAAO,kCAAUF,KAAM,eAAgBwL,QAASxM,EAAAC,EAAAC,cAACuM,EAAD,OAElD,CAAEvL,MAAO,kCAAUF,KAAM,QAASwL,QAASxM,EAAAC,EAAAC,cAACwM,EAAD,QAGvCC,EAAc,wCA8BLC,MA5Bf,WACE,OACE5M,EAAAC,EAAAC,cAACiM,EAAA,EAAD,KACEnM,EAAAC,EAAAC,cAAC2M,EAAA,EAAD,KACE7M,EAAAC,EAAAC,cAAC2M,EAAA,EAAD,CACE7L,KAAK,IACLwL,QACExM,EAAAC,EAAAC,cAAC4M,EAAD,CAAQlB,MAAOe,GACb3M,EAAAC,EAAAC,cAAC6M,EAAD,SAILnM,EAAMC,IAAI,SAACC,GAAD,OACTd,EAAAC,EAAAC,cAAC2M,EAAA,EAAD,CACE7L,KAAMF,EAAKE,KACXwL,QAASQ,IAAM9M,cACbwL,EACA,CAAEE,MAAK,GAAApG,OAAKmH,EAAL,OAAAnH,OAAsB1E,EAAKI,QAClCJ,EAAK0L,SAEPvL,IAAKH,EAAKI,aCxBP+L,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxCC,EAAAxH,EAAA,GAAAyH,KAAAD,EAAAE,KAAA,UAAqBD,KAAK,SAAA1B,GAAiD,IAA9C4B,EAA8C5B,EAA9C4B,OAAQC,EAAsC7B,EAAtC6B,OAAQC,EAA8B9B,EAA9B8B,OAAQC,EAAsB/B,EAAtB+B,OAAQC,EAAchC,EAAdgC,QAC3DJ,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAQT,MCHdU,IAASC,OACP7N,EAAAC,EAAAC,cAACF,EAAAC,EAAM6N,WAAP,KACE9N,EAAAC,EAAAC,cAAC6N,EAAD,OAEFlJ,SAASmJ,eAAe,SAM1Bf","file":"static/js/main.a10bc7ad.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { menus } from '../App'\nimport { Helmet } from 'react-helmet'\nimport styled from 'styled-components'\n\nconst Main = () => {\n  return (\n    <>\n      <Helmet>\n        <title>추첨 프로그램</title>\n      </Helmet>\n      <div style={{}}>\n        <h1 style={{ textAlign: 'center', marginBottom: '100px' }}>\n          메뉴를 선택해주세요.\n        </h1>\n        <div\n          style={{\n            display: 'flex',\n            justifyContent: 'space-between',\n            width: '850px',\n            margin: '0 auto',\n          }}\n        >\n          {menus.map((menu) => (\n            <StyledLink to={menu.path} key={menu.label}>\n              {menu.label}\n            </StyledLink>\n          ))}\n        </div>\n      </div>\n    </>\n  )\n}\n\nconst StyledLink = styled(Link)`\n  display: inline-grid;\n  place-items: center;\n  width: 400px;\n  height: 400px;\n  text-decoration: none;\n  background: #000;\n  border-radius: 20px;\n  font-size: 42px;\n  color: #fff;\n  font-weight: 500;\n  transition: 0.6s;\n\n  &:hover {\n    background: #65d4ad;\n    color: #000000;\n  }\n`\n\nexport default Main\n","import React, {\n  ChangeEvent,\n  useRef,\n  useCallback,\n  useEffect,\n  useState,\n  SyntheticEvent,\n  useMemo,\n} from 'react'\nimport styled from 'styled-components'\nimport getShuffledPeople from '../utils/getShuffledPeople'\nimport classnames from 'classnames'\nimport $ from 'jquery'\n\ninterface ArrangementData {\n  row: number\n  column: number\n}\ninterface RaffleData {\n  people: Person[]\n  groups: Groups\n}\n\nexport interface Person {\n  name: string\n  group: string\n  adjHasSameGroup?: boolean\n}\n\nexport interface Groups {\n  [index: string]: string\n}\n\nconst Arrangement = () => {\n  const [row, setRow] = useState('')\n  const [column, setColumn] = useState('')\n  const [bannedSeatIdx, setBannedSeatIdx] = useState<Number[]>([])\n  const [started, setStarted] = useState(false)\n\n  const people = useRef<Person[]>([])\n  const groups = useRef<Groups>({})\n  const setting = useRef<ArrangementData>({ row: 0, column: 0 })\n\n  const intervalId = useRef<number>()\n\n  useEffect(() => {\n    const arrangementData: ArrangementData = JSON.parse(\n      localStorage.getItem('arrangementData')!\n    )\n    const raffleData: RaffleData = JSON.parse(\n      localStorage.getItem('raffleData')!\n    )\n\n    if (arrangementData) {\n      const { row, column } = arrangementData\n\n      setting.current = { row, column }\n\n      if (raffleData) {\n        const { people: fetchedPeople, groups: fetchedGroups } = raffleData\n\n        people.current = fetchedPeople\n        groups.current = fetchedGroups\n      }\n\n      setRow(row + '')\n      setColumn(column + '')\n    }\n  }, [])\n\n  useEffect(() => {\n    hideSeatItems()\n  }, [row, column, bannedSeatIdx])\n\n  const hideSeatItems = () => {\n    const $seatArea = $('.seat__area')\n    const seatAreaWidth = $seatArea.width() || 0\n    const seatAreaHeight = $seatArea.height() || 0\n\n    const seatItems =\n      document.querySelectorAll<HTMLButtonElement>('.seat__item')\n    seatItems.forEach((seat) => {\n      seat.dataset.left = String(seat.offsetLeft)\n      seat.dataset.top = String(seat.offsetTop)\n\n      $('.seat__person', seat)\n        .animate({\n          left: `${seatAreaWidth / 2 - seatWidth / 2}px`,\n          top: `${seatAreaHeight / 2 - seatHeight / 2}px`,\n        })\n        .hide()\n    })\n  }\n\n  const handleInputChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target\n    const setFunctions: {\n      [index: string]: React.Dispatch<React.SetStateAction<string>>\n    } = { row: setRow, column: setColumn }\n\n    let onlyNumber = Number(value.replace(/[^0-9]/g, ''))\n    onlyNumber = onlyNumber > 100 ? 100 : onlyNumber\n    setFunctions[name](String(onlyNumber))\n\n    setting.current[name as keyof ArrangementData] = onlyNumber\n    localStorage.setItem('arrangementData', JSON.stringify(setting.current))\n    setBannedSeatIdx([])\n  }, [])\n\n  const handleSeatClick = useCallback(\n    (e: SyntheticEvent<HTMLButtonElement>) => {\n      const idx = Number(e.currentTarget.dataset.idx)\n\n      if (bannedSeatIdx.indexOf(idx) === -1) {\n        setBannedSeatIdx([...bannedSeatIdx, idx])\n      } else {\n        setBannedSeatIdx(bannedSeatIdx.filter((x) => x !== idx))\n      }\n    },\n    [bannedSeatIdx]\n  )\n\n  const handleStartButtonClick = useCallback(\n    (e: SyntheticEvent<HTMLButtonElement>) => {\n      setStarted(true)\n\n      hideSeatItems()\n\n      const personElements = Array.from(\n        document.querySelectorAll<HTMLDivElement>('.seat__person')\n      )\n\n      const completeList: HTMLDivElement[] = []\n\n      let zIndex = 100\n      const animation = () => {\n        const raffledIdx = Math.trunc(Math.random() * personElements.length)\n\n        const $personElement = $(personElements[raffledIdx])\n        const goLeft = Number($personElement.parent().data('left'))\n        const goTop = Number($personElement.parent().data('top'))\n\n        const currentLeft = window.parseInt($personElement.css('left'))\n        const currentTop = window.parseInt($personElement.css('top'))\n\n        console.log(Math.abs(currentLeft - goLeft))\n        console.log(Math.abs(currentTop - goTop))\n        $personElement\n          .css({ zIndex: ++zIndex })\n          .show(1000)\n          .animate({ left: goLeft + 1 }, Math.abs(currentLeft - goLeft) * 4)\n          .animate({ top: goTop + 1 }, Math.abs(currentTop - goTop) * 4)\n\n        completeList.push(personElements.splice(raffledIdx, 1)[0])\n      }\n\n      animation()\n      const startAnimation = () => {\n        intervalId.current = window.setInterval(() => {\n          animation()\n\n          if (personElements.length === 0) {\n            window.clearInterval(intervalId.current)\n            setStarted(false)\n          }\n        }, 3000)\n      }\n      startAnimation()\n    },\n    []\n  )\n\n  const shuffledPeople = useMemo(() => {\n    if (people) {\n      return getShuffledPeople(Number(row), Number(column), people.current)\n    }\n  }, [row, column, bannedSeatIdx])\n  let peopleIdx = 0\n\n  return (\n    <StyledSection>\n      <h1>자리 추첨기</h1>\n      <form style={{ marginBottom: 15 }}>\n        <span style={{ marginRight: 15 }}>\n          <StyledInput\n            type=\"text\"\n            id=\"row\"\n            name=\"row\"\n            value={row}\n            onChange={handleInputChange}\n          />\n          <label htmlFor=\"row\">행</label>\n        </span>\n        <span>\n          <StyledInput\n            type=\"text\"\n            id=\"column\"\n            name=\"column\"\n            value={column}\n            onChange={handleInputChange}\n          />\n          <label htmlFor=\"column\">열</label>\n        </span>\n        <StyledButton\n          type=\"button\"\n          onClick={handleStartButtonClick}\n          disabled={started}\n        >\n          Start!\n        </StyledButton>\n      </form>\n      <SeatArea className=\"seat__area\">\n        {Array.from(Array(Number(row)).keys()).map((eachRow, i) => (\n          <div key={`row-${i}`}>\n            {Array.from(Array(Number(column)).keys()).map((eachColumn, j) => {\n              const idx = i * Number(column) + j\n              return (\n                <Seat\n                  key={`column-${idx}`}\n                  type=\"button\"\n                  data-idx={idx}\n                  data-testid={`seat-${idx}`}\n                  onClick={handleSeatClick}\n                  className={classnames(\n                    'seat__item',\n                    bannedSeatIdx.indexOf(idx) !== -1 ? 'banned' : false\n                  )}\n                  disabled={started}\n                >\n                  {shuffledPeople &&\n                    peopleIdx < shuffledPeople.length &&\n                    bannedSeatIdx.indexOf(idx) === -1 && (\n                      <PersonEl className=\"seat__person\">\n                        <span className=\"name\">\n                          {shuffledPeople[peopleIdx]?.name}\n                        </span>\n                        <span className=\"group\">\n                          {groups.current[shuffledPeople[peopleIdx++]?.group]}\n                        </span>\n                      </PersonEl>\n                    )}\n                </Seat>\n              )\n            })}\n          </div>\n        ))}\n      </SeatArea>\n    </StyledSection>\n  )\n}\n\nconst seatWidth = 180\nconst seatHeight = 80\n\nconst StyledSection = styled.section`\n  text-align: center;\n`\n\nconst SeatArea = styled.div`\n  position: relative;\n  display: inline-block;\n`\n\nconst Seat = styled.button`\n  box-sizing: border-box;\n  width: ${seatWidth}px;\n  height: ${seatHeight}px;\n  margin: 10px;\n  padding: 0;\n  border: 1px solid #000;\n  border-radius: 10px;\n  vertical-align: top;\n  background: #fff;\n  cursor: pointer;\n  transition: all 0.3s;\n\n  &:hover {\n    background: #dadada;\n  }\n\n  &.banned {\n    background: #c32148;\n\n    &:hover {\n      background: #a51d3c;\n    }\n  }\n\n  &:disabled {\n    color: #000;\n  }\n`\n\nconst PersonEl = styled.div`\n  position: absolute;\n  /* left: 50%; */\n  /* top: 50%; */\n  /* opacity: 0; */\n  box-sizing: border-box;\n  display: block;\n  width: ${seatWidth}px;\n  height: ${seatHeight}px;\n  border: 1px solid #000;\n  margin-left: -1px;\n  margin-top: -1px;\n  border-radius: 10px;\n  background: #f8f6cc;\n\n  .name {\n    display: block;\n    font-weight: 700;\n    font-size: 22px;\n    margin-top: 15px;\n    margin-bottom: 5px;\n  }\n`\n\nconst StyledInput = styled.input`\n  box-sizing: border-box;\n  width: 50px;\n  height: 30px;\n  text-align: right;\n  margin-right: 15px;\n  padding-right: 15px;\n  font-size: 16px;\n`\n\nconst StyledButton = styled.button`\n  box-sizing: border-box;\n  width: 65px;\n  height: 30px;\n  font-size: 16px;\n  margin-left: 25px;\n`\n\nexport default Arrangement\n","import { Person } from '../Components/Arrangement'\n\nexport default function getShuffledPeople(\n  row: number,\n  col: number,\n  people: Person[]\n) {\n  const copiedPeople = [...people]\n  const shuffledPeople: Person[] = []\n\n  const checkLeftPersonSameGroup = (currentIdx: number, person: Person) => {\n    if (currentIdx === 0) {\n      return false\n    } else {\n      return person.group === shuffledPeople[currentIdx - 1].group\n    }\n  }\n\n  // 자리 섞기\n  while (copiedPeople.length !== 0) {\n    const raffledIdx = Math.trunc(Math.random() * copiedPeople.length)\n\n    if (\n      checkLeftPersonSameGroup(\n        shuffledPeople.length,\n        copiedPeople[raffledIdx]\n      ) === false\n    ) {\n      const personToMove = copiedPeople.splice(raffledIdx, 1)[0]\n      personToMove.adjHasSameGroup = false\n      shuffledPeople.push(personToMove)\n    } else {\n      let notFoundDifferentGroup = true\n      for (let i = 0; i < 500; i++) {\n        const reRaffledIdx = Math.trunc(Math.random() * copiedPeople.length)\n        if (\n          checkLeftPersonSameGroup(\n            shuffledPeople.length,\n            copiedPeople[reRaffledIdx]\n          ) === false\n        ) {\n          const personToMove = copiedPeople.splice(reRaffledIdx, 1)[0]\n          personToMove.adjHasSameGroup = false\n          shuffledPeople.push(personToMove)\n          notFoundDifferentGroup = false\n          break\n        }\n      }\n\n      if (notFoundDifferentGroup) {\n        const personToMove = copiedPeople.splice(raffledIdx, 1)[0]\n        personToMove.adjHasSameGroup = true\n        shuffledPeople[shuffledPeople.length - 1].adjHasSameGroup = true\n        shuffledPeople.push(personToMove)\n      }\n    }\n  }\n\n  return shuffledPeople\n}\n","import React, { useCallback, useEffect, useState } from 'react'\n\nexport interface RaffleData {\n  name: string\n  label: string\n}\n\nconst defaultData = {\n  groups: {\n    a: '그룹1',\n    b: '그룹2',\n  },\n  people: [\n    {\n      name: '사람1',\n      group: 'a',\n    },\n    {\n      name: '사람2',\n      group: 'b',\n    },\n  ],\n}\n\nconst DataSetting = () => {\n  const [value, setValue] = useState('')\n\n  const handleSubmit = useCallback((e) => {\n    e.preventDefault()\n\n    const inputElements = e.target.elements\n    const data = inputElements.data\n\n    localStorage.setItem('raffleData', data.value)\n  }, [])\n\n  const handleChange = useCallback((e) => {\n    const value = e.currentTarget.value\n    setValue(value)\n  }, [])\n\n  useEffect(() => {\n    let data = localStorage.getItem('raffleData')\n    if (data) {\n      data = data.trim()\n      console.log(data.length)\n      if (data.length === 0) {\n        setValue(JSON.stringify(defaultData, null, 2))\n      } else {\n        setValue(JSON.stringify(JSON.parse(data), null, 2))\n      }\n    } else {\n      setValue(JSON.stringify(defaultData, null, 2))\n    }\n  }, [])\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} style={{ textAlign: 'center' }}>\n        <textarea\n          data-testid=\"input\"\n          name=\"data\"\n          onChange={handleChange}\n          rows={50}\n          cols={100}\n          style={{ marginTop: '50px', marginBottom: '20px' }}\n          value={value}\n        ></textarea>\n        <button\n          type=\"submit\"\n          style={{\n            display: 'block',\n            width: '100px',\n            height: '30px',\n            margin: '0 auto',\n            fontSize: '16px',\n          }}\n        >\n          저장\n        </button>\n      </form>\n    </>\n  )\n}\n\nexport default DataSetting\n","import React from 'react'\nimport { Helmet } from 'react-helmet'\nimport { useLocation } from 'react-router'\nimport { Link } from 'react-router-dom'\n\ninterface Props {\n  title: string\n  children?: React.ReactNode\n}\n\nexport const Layout = ({ title, children }: Props) => {\n  const location = useLocation()\n\n  return (\n    <>\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      <header\n        style={{\n          textAlign: 'right',\n          padding: '20px',\n          fontSize: '24px',\n          fontWeight: 700,\n        }}\n      >\n        {location.pathname !== '/' && (\n          <Link to=\"/\" style={{ textDecoration: 'none', color: '#000' }}>\n            메인으로\n          </Link>\n        )}\n      </header>\n\n      <main>{children}</main>\n\n      <footer\n        style={{\n          textAlign: 'center',\n          padding: '10px 0',\n          color: '#333',\n          marginTop: '100px',\n        }}\n      >\n        Made By 코나아이 공채 12기 임은섭.{' '}\n        <a\n          href=\"https://github.com/LimEunSeop/raffle\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Click here\n        </a>{' '}\n        to go to Github Repository\n      </footer>\n    </>\n  )\n}\n","import React from 'react'\nimport './App.css'\n\nimport { Routes, Route, HashRouter } from 'react-router-dom'\nimport Main from './Components/Main'\nimport Arrangement from './Components/Arrangement'\n// import Draw from './Components/Draw'\nimport DataSetting from './Components/DataSetting'\nimport { Layout } from './Components/Layout'\n\nexport const menus = [\n  { label: '자리 바꾸기', path: '/arrangement', element: <Arrangement /> },\n  // { label: '조 추첨', path: '/draw', element: <Draw /> },\n  { label: '데이터 세팅', path: '/data', element: <DataSetting /> },\n]\n\nconst programName = '추첨 프로그램'\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Routes>\n        <Route\n          path=\"/\"\n          element={\n            <Layout title={programName}>\n              <Main />\n            </Layout>\n          }\n        />\n        {menus.map((menu) => (\n          <Route\n            path={menu.path}\n            element={React.createElement(\n              Layout,\n              { title: `${programName} - ${menu.label}` },\n              menu.element\n            )}\n            key={menu.label}\n          />\n        ))}\n      </Routes>\n    </HashRouter>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}